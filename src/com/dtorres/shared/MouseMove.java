package com.dtorres.shared;

/**
 * Used to set the place where the mouse will be directed, 
 * then the localed will execute to provide mouse move result
 */

import java.awt.Point;
import java.awt.Robot;
import java.awt.event.MouseEvent;
import java.io.IOException;

import org.apache.log4j.Logger;

import com.dtorres.remoted.RemoteAction;

public class MouseMove implements RemoteAction {

	// Generated by eclipse wizard
	private static final long serialVersionUID = -5341705022889082589L;
	
	private static final Logger log = Logger.getLogger(MouseMove.class);
	
	private final int left;
	private final int top;
	
	public MouseMove(Point destination){
		log.info("Setting the destination point of mouse to [" + destination.getX() + "],[+ destination.getY() +]");
		left = (int) destination.getX();
		top = (int) destination.getY();
		log.info("Destination point setted.");
	}

	/**
	 * Overloading a constructor, unusual technique very useful for code maintenance.
	 * @param event
	 */
	public MouseMove(MouseEvent event){
		this(event.getPoint());
		log.info("built from MouseEvent constructor overload");
	}
	
	@Override
	public Object execute(Robot robot) throws IOException {
		robot.mouseMove(left, top);
		return null;
	}
	
	@Override
	public String toString(){
		return "MouseMove: top:[" + top + "] left:[" + left + "]";
	}

}
